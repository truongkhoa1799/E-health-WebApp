{"version":3,"file":"messageSpan.js","sourceRoot":"","sources":["../../../src/diagnostics/messageSpan.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;AAElC,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAqB,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAGjE;;GAEG;AACH,MAAM,UAAU,iBAAiB,CAC/B,UAAsC,EACtC,cAAsE;IAEtE,MAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,MAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,yBAAyB,EAAE;QACvD,IAAI,EAAE,QAAQ,CAAC,QAAQ;QACvB,MAAM,EAAE,UAAU;KACnB,CAAC,CAAC;IACH,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,oBAAoB,CAAC,CAAC;IACxD,IAAI,cAAc,EAAE;QAClB,IAAI,CAAC,YAAY,CAAC,yBAAyB,EAAE,cAAc,CAAC,UAAU,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;KACxD;IAED,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { getTracer } from \"@azure/core-tracing\";\nimport { Span, SpanContext, SpanKind } from \"@opentelemetry/api\";\nimport { EventHubConnectionConfig } from \"../eventhubConnectionConfig\";\n\n/**\n * @internal\n */\nexport function createMessageSpan(\n  parentSpan?: Span | SpanContext | null,\n  eventHubConfig?: Pick<EventHubConnectionConfig, \"entityPath\" | \"host\">\n): Span {\n  const tracer = getTracer();\n  const span = tracer.startSpan(\"Azure.EventHubs.message\", {\n    kind: SpanKind.PRODUCER,\n    parent: parentSpan\n  });\n  span.setAttribute(\"az.namespace\", \"Microsoft.EventHub\");\n  if (eventHubConfig) {\n    span.setAttribute(\"message_bus.destination\", eventHubConfig.entityPath);\n    span.setAttribute(\"peer.address\", eventHubConfig.host);\n  }\n\n  return span;\n}\n"]}